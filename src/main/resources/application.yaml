debug: false
  # logback의 debug 모드를 비활성화

management.endpoints.web.exposure.include: "*"
  # spring actuator의 엔드포인트 중 감춰져있는 것을 모두 활성화

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
      # org.hibernate.SQL  : Logger를 통해 하이버네이트 실행 SQL을 남김
      # org.hibernate.type : SQL 실행 파라미터를 로그로 남긴다.

spring:
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
          # hibernate.format_sql: true
          # sql query formatting
          # hibernate.default_batch_fetch_size: 100
          # 설정, in (, , , ,) 의 개수, 100 ~ 1000
        # hibernate.use_sql_comments: true
        #querydsl - jpql parameter
        metadata_builder_contributor: io.mykim.projectboard.global.config.mysql.CustomMysqlDialect

---
spring:
  config:
    activate:
      on-profile: local

  # vault - local
  application.name: project-board-local # vault ui에서 생성한 secret 명
  cloud:
    vault:
      uri: http://localhost:8200
      scheme: http
      authentication: TOKEN # 인증방식 설정(token 방식 사용, 상대적으로 보안에 약함)
      token: root
  config.import: vault://

  security:
    oauth2:
      client:
        registration:
          #google
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          #naver
          naver:
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - nickname

          # kakao
          kakao:
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}              # 발급받은 REST API 키
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}      # 발급받은 Client Secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao" # ""인 이유 - {} 인식을 위해
            client-authentication-method: POST                # 인증 API요청 시 http method
            client-name: Kakao
            scope:
              - account_email
              - profile_nickname

        provider:
          # naver
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            # 네이버 서버로부터 넘어온 인증정보 식별자
            # 기준이 되는 user_name의 이름을 네이버에서는 response로 해야됨
            # 이유는 네이버의 회원 조회 시 반환되는 json 형태때문

          # kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id #카카오 서버로부터 넘어온 인증정보 식별자


  #DB Connection
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create

  sql.init.mode: always

---
awsParameterStorePropertySource:
  enabled: true

server:
  port: 8080

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${/project-board/cloud-parameter-store_prod/DB_URL}
    username: ${/project-board/cloud-parameter-store_prod/DB_USERNAME}
    password: ${/project-board/cloud-parameter-store_prod/DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        registration:
          #google
          google:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          #naver
          naver:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - nickname

          # kakao
          kakao:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - account_email
              - profile_nickname

        provider:
          # naver
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          # kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: none

  sql.init.mode: never

---
awsParameterStorePropertySource:
  enabled: true

server:
  port: 8081

spring:
  config:
    activate:
      on-profile: prod1

  datasource:
    url: ${/project-board/cloud-parameter-store_prod/DB_URL}
    username: ${/project-board/cloud-parameter-store_prod/DB_USERNAME}
    password: ${/project-board/cloud-parameter-store_prod/DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        registration:
          #google
          google:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          #naver
          naver:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - nickname

          # kakao
          kakao:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - account_email
              - profile_nickname

        provider:
          # naver
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          # kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: none

  sql.init.mode: never

---
awsParameterStorePropertySource:
  enabled: true

server:
  port: 8082

spring:
  config:
    activate:
      on-profile: prod2

  datasource:
    url: ${/project-board/cloud-parameter-store_prod/DB_URL}
    username: ${/project-board/cloud-parameter-store_prod/DB_USERNAME}
    password: ${/project-board/cloud-parameter-store_prod/DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        registration:
          #google
          google:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          #naver
          naver:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - nickname

          # kakao
          kakao:
            client-id: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${/project-board/cloud-parameter-store_prod/OAUTH2_KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - account_email
              - profile_nickname

        provider:
          # naver
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          # kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: none

  sql.init.mode: never